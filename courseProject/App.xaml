<Application x:Class="courseProject.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:courseProject"
             StartupUri="login.xaml">
    <Application.Resources>
        <!--Main Window-->
        <Style TargetType="Button" x:Key="buttonStyle">
            <Setter Property="Background" Value="#3F3B40"></Setter>
            <Setter Property="Foreground" Value="#EEEFF7"></Setter>
            <Setter Property="BorderThickness" Value="10 0 0 0"></Setter>
            <Setter Property="BorderBrush" Value="#3F3B40"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        </Style>

        <Style TargetType="Button" x:Key="buttonStyleCl">
            <Setter Property="Background" Value="#3F3B40"></Setter>
            <Setter Property="Foreground" Value="#EEEFF7"></Setter>
            <Setter Property="BorderThickness" Value="10 0 0 0"></Setter>
            <Setter Property="BorderBrush" Value="#ffde00"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="IconStyle">
            <Setter Property="FontFamily" Value="FontAwesome"></Setter>
            <Setter Property="Margin" Value="50 0 10 0"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="MenuTextStyle">
            <Setter Property="FontFamily" Value="Lato"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
        </Style>

        <Style TargetType="Grid" x:Key="Header">
            <Setter Property="Background" Value="#3F3B40"></Setter>
            
        </Style>

        <Style TargetType="Grid" x:Key="SideBar">
            <Setter Property="Background" Value="#3F3B40"></Setter>
        </Style>

        <Style TargetType="Grid" x:Key="Content">
            <Setter Property="Background" Value="#f2f3f8"></Setter>
        </Style>

        <Style TargetType="StackPanel" x:Key="PanelLogo">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="50 0 0 0"></Setter>
            
        </Style>

        <Style TargetType="TextBlock" x:Key="Logo">
            <Setter Property="FontFamily" Value="Arciform Sans"></Setter>
            <Setter Property="FontSize" Value="36"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="AutorizeName">
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Foreground" Value="white"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <Style TargetType="Image" x:Key="Icon">
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Margin" Value="10 0 0 0"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <!--Login-->

        <Style TargetType="Window" x:Key="Login">
            <Setter Property="Background" Value="#3F3B40"></Setter>
        </Style>
        
        <Style TargetType="TextBlock" x:Key="TextLogWinButton">
            <Setter Property="Foreground" Value="#EEEFF7"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontFamily" Value="Lato"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
        </Style>

        <Style TargetType="TextBox" x:Key="loginBox">
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Width" Value="350"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
        </Style>
        
        <Style TargetType="PasswordBox" x:Key="PasswordBox">
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Width" Value="350"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
        </Style>
        
        <Style TargetType="Label" x:Key="loginLabel">
            <Setter Property="Foreground" Value="#6C7367"></Setter>
            <Setter Property="FontFamily" Value="Lato"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Margin" Value="20 0 15 0"></Setter>
        </Style>

        <Style TargetType="Button" x:Key="LoginButton">
            <Setter Property="Width" Value="250"></Setter>
            <Setter Property="Height" Value="50"></Setter>
            <Setter Property="FontFamily" Value="Lato"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Margin" Value="0 0 0 30"></Setter>
            <Setter Property="Background" Value="#ffde00"></Setter>
        </Style>
        
        <Style TargetType="TextBlock" x:Key="WarningMessage">
            <Setter Property="Foreground" Value="#dc3545"></Setter>
            <Setter Property="HorizontalAlignment" Value="center"></Setter>
            <Setter Property="VerticalAlignment" Value="center"></Setter>
            <Setter Property="MaxWidth" Value="270"></Setter>
            <Setter Property="FontFamily" Value="Lato"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Margin" Value="0 0 0 30"></Setter>
        </Style>

        <Style TargetType="Button" x:Key="CloseBt">
            <Style.Setters>
                <Setter Property="Width" Value="30"></Setter>
                <Setter Property="Height" Value="30"></Setter>
                <Setter Property="BorderThickness" Value="0 0 0 0"></Setter>
                <Setter Property="HorizontalAlignment" Value="Right"></Setter>
                <Setter Property="VerticalAlignment" Value="Top"></Setter>
                <Setter Property="Background" Value="#2a282b"></Setter>
                <Setter Property="Foreground" Value="#EEEFF7"></Setter>
            </Style.Setters>
        </Style>
        <!--Home-->
        <Style TargetType="Button" x:Key="ReservBt">
            <Setter Property="FontFamily" Value="Lato"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="FontFamily" Value="Lato"></Setter>
            <Setter Property="FontSize" Value="30"></Setter>
            <Setter Property="Margin" Value="50 0"></Setter>
        </Style>

        <Style TargetType="StackPanel" x:Key="InfField">
            <Setter Property="Margin" Value="50 40"></Setter>
        </Style>

        <Style TargetType="Grid" x:Key="UnderLine">
            <Setter Property="Background" Value="White"></Setter>
        </Style>

        <Style TargetType="TextBox" x:Key="addReservTB">
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="FontSize" Value="30"></Setter>
        </Style>

        <Style TargetType="ComboBox" x:Key="addReservCB">
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
        </Style>
        <!--employees-->
        <Style TargetType="Button" x:Key="DeleteBt">
            <Setter Property="Background" Value="{x:Null}"></Setter>
            <Setter Property="Foreground" Value="#ba000d"></Setter>
            <Setter Property="FontFamily" Value="FontAwesome"></Setter>
            <Setter Property="FontSize" Value="30"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="UserRowText">
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="FontFamily" Value="Lato"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="40 0 0 0"></Setter>
        </Style>

        <!--Templates-->
        <ControlTemplate x:Key="HomeBt" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="White"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#ffde00"></Setter>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="closeBt" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#585259"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#fbe96e"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#f1e086"></Setter>
                </Trigger>
            
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="sumbitBt" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#ffea00"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#ffde00"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#000"></Setter>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="DeleteButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#d50000"></Setter>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="InfoButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#ffab00"></Setter>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ChangeInfoButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#00e5ff"></Setter>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>
